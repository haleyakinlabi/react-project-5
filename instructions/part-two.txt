1. Dependencies Install
-First, you need to install the dependencies needed for redux to work in this project.

-In your terminal, install the two necessary dependencies, react-redux and @reduxjs/toolkit, using the following command:
npm i react-redux @reduxjs/toolkit
--------------------------------------------------------
2. File Structure Setup
Src
    components 
    redux
        slices
            potentialCountriesSlice.js
            store.js
            App.css
            App.js
            index.css
            index.js
-----------------------------------------------------------
3. Configure the store
    import { configureStore } from "@redux.js/toolkit";

    export default configureStore({
        reducer: {},
    });
------------------------------------------------
4. Configue potentialCountriesSlice part1

     import { createSlice } from "@redux.js/toolkit";

    export cost potentialCountriesSlice = createSlice({
        name: "potentialcountries",
        initialState:{
            value:[
                {
                    name: {
                        common: "This is initialPotential",
                    },
                },
            ],
        },
        reducers: {
            setPotentialCountries: (state, action) => {
                state.value = action-payload;
            },
            deletePotentialCountries: (state) => {
                state. value = null;
            },
        },
    });
------------------------------------------------------------------------
5. Configue potentialCountriesSlice part2

    import { createSlice } from "@reduxis/toolkit":

    export cost potentialCountriesSlice = createSlice({
        name:"potentialCountries",
        initialState: {
            value: [
                {
                    name: {
                        common:"This is initialPotential",
                    },
                },
            ],
        },
        reducers: {
            setPotentialCountries: (state, action) => {
                state.value = action-payload;
            },
            deletePotentialCountries: (state) => {
                state. value = null;
            },
        },
    });

    export cost { setPotentialCountries, deletePotentialCountries } =
        potentialCountriesSlice-actions;

    export const selectPotentials = (state) => state.potentialCountries.value;

    export default potentialCountriesSlice.reducer;
--------------------------------------------------------------------------------------
6. Import potentialCountriesSlice into the store
-store.js

     import { configureStore } from "@redux.js/toolkit";
     import potentialCountriesReducer from "../redux/slices/potentialCountriesSlice"

     export default configureStore({
        reducer: { potentialCountries: potentialCountriesReducer},
     })
--------------------------------------------------------------------------
7. Connect the store with the React application
index.js

    import React from "react"; 
    import ReactDom from "react-dom/client"; 
    import App from "./App";
    import "./index.css";
    import { Provider } from "react-redux":
    import store from "./redux/store";

    const root = ReactDOM.createRoot (document.getElementById ("root")) ;
    root.render(
        <React.StrictMode>
            <Provider store={store}>
                <App />
            </Provider>
        </React.StrictMode>
    );
--------------------------------------------------------------------
8. Check the Connection
App.js

    import "./App.css";
    import Header from "./Components/Header";
    import MainDisplay from "./Components/MainDisplay";
    import OptionDisplay from "./Components/OptionDisplay";
    import { selectPotentials } from "./redux/slices/potentialCountriesslice";
    import { useSelector } from "react-redux";

    function App() {
        let potentials = useSelector(selectPotentials);
        console. log (potentials);
        return (
            <div className="App font-link">
                <Header />
                <OptionDisplay/>
            </div>
        )
    }

    export default App;
-------------------------------------------------------------------------

